Интерпретаторы в Apache Zeppelin
--------------------------------

+ `Обзор`_
+ `Что такое интерпретатор Zeppelin?`_
+ `Что такое настройка интерпретатора?`_
+ `Что такое группа интерпретаторов?`_
+ `Режим привязки интерпретатора`_
+ `Подключение к существующему удаленному интерпретатору`_


Обзор
^^^^^^

В этом разделе рассказывается об интерпретаторах, их роли и настройках в **Apache Zeppelin**. Концепция интерпретатора **Zeppelin** позволяет подключать любой язык/сервер обработки данных. В настоящее время **Zeppelin** поддерживает множество интерпретаторов, таких как **Scala** (с **Apache Spark**), **Python** (с **Apache Spark**), **Spark SQL**, **JDBC**, **Markdown**, **Shell** и другие.


Что такое интерпретатор Zeppelin?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Интерпретатор **Zeppelin** -- это плагин, который позволяет пользователям **Apache Zeppelin** использовать определенный язык/сервер обработки данных. Например, чтобы использовать Scala-код в **Zeppelin**, понадобится *%spark* интерпретатор.

На странице интерпретатора при нажатии кнопки "+Create" в открывшемся диалоговом окне в выпадающем списке поля "Interpreter" отображаются все доступные интерпретаторы на сервере (:numref:`Рис.%s.<zeppelin_interpreters_create-interpreter>`).

.. _zeppelin_interpreters_create-interpreter:

.. figure:: ../imgs/zeppelin_interpreters_create-interpreter.*
   :align: center

   Создать новый интерпретатор


Что такое настройка интерпретатора?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Настройка интерпретатора **Zeppelin** -- это конфигурация данного интерпретатора на сервере **Apache Zeppelin**. Например, свойства необходимы, чтобы интерпретатор **hive JDBC** подключался к серверу **Hive** (:numref:`Рис.%s.<zeppelin_interpreters_properties>`).

.. _zeppelin_interpreters_properties:

.. figure:: ../imgs/zeppelin_interpreters_properties.*
   :align: center

   Свойства интерпретатора


Для экспорта свойств как переменной среды необходимо, чтобы имя свойства состояло из символов верхнего регистра, цифр и подчеркивания (*[A-Z_0-9]*). В противном случае свойства задаются как свойство **JVM**.

Каждый блокнот может быть связан с несколькими настройками интерпретатора, для этого следует использовать значок настройки в правом верхнем углу блокнота (:numref:`Рис.%s.<zeppelin_interpreters_settings>`).

.. _zeppelin_interpreters_settings:

.. figure:: ../imgs/zeppelin_interpreters_settings.*
   :align: center

   Настройки интерпретатора


Что такое группа интерпретаторов?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Каждый интерпретатор принадлежит к группе интерпретаторов. **Interpreter Group** -- это start/stop узел интерпретатора. По умолчанию каждый интерпретатор принадлежит к одной группе, но группа может содержать больше интерпретаторов. Например, группа интерпретаторов **Spark** включает **Spark**-поддержку, **pySpark**, **Spark SQL** и загрузчик зависимостей.

Технически, интерпретаторы **Zeppelin** одной группы запускаются в такой же **JVM**. Каждый интерпретатор относится к одной группе и регистрируется вместе. Все их свойства перечислены в настройках интерпретатора (:numref:`Рис.%s.<zeppelin_interpreters_properties-group>`).

.. _zeppelin_interpreters_properties-group:

.. figure:: ../imgs/zeppelin_interpreters_properties-group.*
   :align: center

   Свойства групп интерпретатора


Режим привязки интерпретатора
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Каждая настройка интерпретатора может быть установлена на один из режимов привязки: *"shared"* -- общедоступный, *"scoped"* -- ограниченный, *"isolated"* -- отдельный. В режиме *"shared"* каждый блокнот, связанный с настройкой интерпретатора, совместно использует один экземпляр интерпретатора. В режиме *"scoped"* каждый блокнот создает новый экземпляр интерпретатора в том же процессе интерпретатора. В режиме *"isolated"* каждый блокнот создает новый процесс интерпретатора (:numref:`Рис.%s.<zeppelin_interpreters_binding-mode>`).

.. _zeppelin_interpreters_binding-mode:

.. figure:: ../imgs/zeppelin_interpreters_binding-mode.*
   :align: center

   Режимы привязки интерпретатора


Подключение к существующему удаленному интерпретатору
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^










