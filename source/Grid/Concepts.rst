Основные концепции Arenadata Grid
---------------------------------

**Платформа базы данных, ориентированная на память, кэширование и обработку данных**

**Arenadata Grid** (**ADG**) -- это ориентированная на память распределенная база данных для транзакционных, аналитических и потоковых рабочих  нагрузок, обеспечивающая скорость в памяти в масштабе петабайтов.

+ `Факты об Arenadata Grid`_
+ `Клиенты и серверы`_


Факты об Arenadata Grid
^^^^^^^^^^^^^^^^^^^^^^^

+ Является ли Grid персистентным хранилищем или это только память?

И то и другое. Локальное персистирование в **Grid** может быть включено и выключено. Это позволяет платформе хранить больше наборов данных, чем может поместиться в доступной памяти. По сути, меньшие операционные наборы данных могут храниться только в памяти, а большие наборы данных, которые не вписываются в память, могут храниться на диске, используя память в качестве слоя кэширования для лучшей производительности.

+ Является ли Grid in-memory database (IMDB)?

Да. Несмотря на то, что durable memory **Grid** хорошо работает в памяти и на диске, персистирование диска может быть отключено, а **Grid** может выступать в качестве распределенной базы данных в памяти, с поддержкой **SQL** и распределенных соединений.

+ Является ли Grid in-memory data grid (IMDG)?

Да. **Grid** -- это полнофункциональная сетка данных, которая может использоваться либо в режиме только памяти, либо с использованием локальной персистентности. **Grid** также может автоматически интегрироваться с любыми сторонними базами данных, включая любые СУБД или хранилища **NoSQL**.

+ Является ли Grid распределенным кэшем?

Да. Когда локальная персистентность отключена, **Grid** становится распределенным кэшем. **Grid** реализует спецификацию **JCache** (**JSR 107**) и обеспечивает гораздо больше функциональности, чем требуется спецификацией, включая режимы раздельного и реплицированного распространения, распределенные транзакции **ACID**, SQL-запросы, локальную персистентность и т.д.

+ Является ли Grid распределенной базой данных?

Да. Данные в **Grid** секционируются или реплицируются в кластере из нескольких узлов. Это обеспечивает масштабируемость и повышает устойчивость системы. **Grid** автоматически контролирует разделение данных, однако, пользователи могут подключать свои собственные функции распределения (affinity) и совместно использовать разные части данных для повышения эффективности.

+ 









Клиенты и серверы
^^^^^^^^^^^^^^^^^

