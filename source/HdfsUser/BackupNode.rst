Backup Node
============

Узел резервного копирования Backup обеспечивает ту же функциональность контрольных точек, что и узел Checkpoint, а также поддерживает в памяти обновленную копию пространства имен файловой системы, которая всегда синхронизируется с активным состоянием NameNode. Наряду с принятием потока изменений файловой системы журнала из NameNode и сохранением его на диске, Backup Node также применяет эти изменения к своей собственной копии пространства имен в памяти, создавая таким образом резервную копию пространства имен.

Узлу резервного копирования не нужно загружать fsimage и редактировать файлы с активного NameNode для создания контрольной точки, как это требуется для Checkpoint Node или Secondary NameNode, поскольку Backup Node уже имеет актуальный статус состояния пространства имен в памяти. Процесс создания контрольной точки Backup узла является более эффективным, поскольку ему нужно только сохранить пространство имен в локальном файле fsimage и сбросить изменения.

Поскольку резервный узел поддерживает копию пространства имен в памяти, его требования к RAM такие же, как и у узла NameNode.

.. important:: NameNode поддерживает один Backup Node. Узлы Checkpoint не могут быть зарегистрированы, если используется Backup

Backup Node настраивается так же, как узел Checkpoint, начиная с ``bin/hdfs namenode -backup``.

Расположение узла Backup (или Checkpoint) и его веб-интерфейса настраивается с помощью переменных конфигурации *dfs.namenode.backup.address* и *dfs.namenode.backup.http-address*.

Использование узла Backup обеспечивает возможность запуска NameNode без постоянного хранилища, делегируя всю ответственность за сохранение состояния пространства имен узлу Backup. Для этого необходимо запустить NameNode с параметром ``-importCheckpoint``, а также не указывать постоянные каталоги хранения типа edits *dfs.namenode.edits.dir* в конфигурации NameNode.

Пример использования:

  ::
  
     hdfs namenode [-backup] |
           [-checkpoint] |
           [-format [-clusterid cid ] [-force] [-nonInteractive] ] |
           [-upgrade [-clusterid cid] [-renameReserved<k-v pairs>] ] |
           [-upgradeOnly [-clusterid cid] [-renameReserved<k-v pairs>] ] |
           [-rollback] |
           [-rollingUpgrade <rollback |started> ] |
           [-importCheckpoint] |
           [-initializeSharedEdits] |
           [-bootstrapStandby [-force] [-nonInteractive] [-skipSharedEditsCheck] ] |
           [-recover [-force] ] |
           [-metadataVersion ]


* ``-backup`` -- запуск Backup Node;
* ``-checkpoint`` -- запуск Checkpoint Node;
* ``-format [-clusterid cid]`` -- форматирование указанного NameNode. Запускает NameNode, форматирует его и затем выключает. Будет генерировать NameNodeFormatException, если имя dir уже существует и если переформатирование для кластера отключено;
* ``-upgrade [-clusterid cid] [-renameReserved <k-v pairs>]`` -- Namenode должен быть запущен с опцией обновления до новой версии Hadoop;
* ``-upgradeOnly [-clusterid cid] [-renameReserved <k-v pairs>]`` -- обновляет и закрывает указанный NameNode;
* ``-rollback`` -- откат NameNode до предыдущей версии. Следует использовать после остановки кластера и разворачивания старой версии Hadoop;
* ``-rollingUpgrade <rollback|started>`` -- *query* - запрос текущего текущего состояния обновления; *prepare* - подготовка нового обновления; *finalize* - завершение текущего обновления;
* ``-importCheckpoint`` -- загрузка изображения из каталога контрольных точек и сохранение его в текущем. Контрольная точка dir читается из свойства *dfs.namenode.checkpoint.dir*;
* ``-initializeSharedEdits`` -- форматирование нового общего каталога изменений и копирование его в достаточное количество сегментов журнала для запуска резервного NameNode;
* ``-bootstrapStandby [-force] [-nonInteractive] [-skipSharedEditsCheck]`` -- позволяет загружать резервные каталоги хранилища NameNode путем копирования последнего снимка пространства имен из активного NameNode. Используется при первой настройке кластера высокой доступности. Опция *-force* или *-nonInteractive* имеет то же значение, что и *-format*. Опция *-skipSharedEditsCheck* пропускает проверку правок, которая гарантирует достаточное количество правок, уже находящихся в общем каталоге, для запуска с последней контрольной точки;
* ``-recover [-force]`` -- восстановление потерянных метаданных в поврежденной файловой системе;
* ``-metadataVersion`` -- печать версии метаданных программного обеспечения и образа (при условии наличия настроенных каталогов).

